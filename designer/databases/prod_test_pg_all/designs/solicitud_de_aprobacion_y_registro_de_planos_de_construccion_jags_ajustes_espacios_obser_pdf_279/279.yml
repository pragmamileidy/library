--- 
id: 279
name: "Solicitud de Aprobaci\xC3\xB3n y Registro de Planos de Construcci\xC3\xB3n (JAGS) AJUSTES ESPACIOS OBSER PDF"
status: Draft
version: 045-SATPC-0001-2012
description: "Solicitud de Aprobaci\xC3\xB3n y Registro de Planos de Construcci\xC3\xB3n\r\n\
  ALCALD\xC3\x8DA DE PANAM\xC3\x81 \xE2\x80\x93 GOBIERNO MUNICIPAL\r\n\
  AJUSTES ESPACIOS OBSERVACIONES PDF"
help: ""
layout: 
life_cycle: 
tags: "tr\xC3\xA1mite,aprobaci\xC3\xB3n,planos,municipio,alcald\xC3\xADa"
helper: "# obtiene las entidades a partir de la configuraci\xC3\xB3n del tr\xC3\xA1mite\r\n\
  # asume que la data de entidades esta en config.EntidadesEvaluadoras, en un hash con keys en la forma \"entidades_instance_n\"\r\n\
  def entidades(config = nil)\r\n    @config ||= config || {} # valores default son blancos\r\n    @entidades ||= []\r\n\
  \treturn @entidades if (@config.blank? || !@entidades.blank?) # si ya se extrageron entidades usar ese valor\r\n\
  \t@entidades = begin\r\n\
  \t\tres = []\r\n\
  \t\t@config[\"EntidadesEvaluadoras\"].each do |key, entidad_data|\r\n\
  \t\t\tnext unless key =~ /entidades_instance_(\\d+)/ \r\n\
  \t\t\tres[$1.to_i] = entidad_data[\"evaluacion_de_la_entidad\"]  \r\n\
  \t\t\tend\r\n\
  \trescue Exception => e\r\n\
  \t\tres = []\r\n\
  \tensure\r\n\
  \t\tres\t\t\t\r\n\
  \tend\r\n\
  end\r\n\
  \r\n\
  def consecutivo(generador)\r\n  result = WebserviceConsumer.get( \"/consecutive/#{generador}/generate.json\").parsed_response\r\n  result[\"response\"]\r\n\
  end\r\n\
  \r\n\
  def buscar_persona_por_cedula(nro_documento)\r\n  result = WebserviceConsumer.get( \"/service/dummy_tribunal_electoral_obtener_datos_persona_natural/find.json?cedula=#{nro_documento}\").parsed_response\r\n  result[\"response\"]\r\n\
  end\r\n\
  \r\n\
  def buscar_persona_por_pasaporte(nro_documento)\r\n  result = WebserviceConsumer.get( \"/service/dummy_tribunal_electoral_obtener_datos_persona_natural/find.json?pasaporte=#{nro_documento}\").parsed_response\r\n  result[\"response\"]\r\n\
  end\r\n\
  \r\n\
  def tipos_de_plano\r\n  result = WebserviceConsumer.get('/service/ws_tipo_de_plano/records.json').parsed_response\r\n  result[\"response\"]\r\n\
  end\r\n\
  \r\n\
  def buscar_tipo_de_plano_por_nombre(nombre)\r\n  plano = WebserviceConsumer.get(URI.escape(\"/service/ws_tipo_de_plano/find.json?nombre=#{nombre}\")).parsed_response\r\n  result[\"response\"]\r\n\
  end\r\n\
  \r\n\
  def categorias_de_proyecto\r\n  result = WebserviceConsumer.get('/service/ws_categoria_de_proyecto/records.json').parsed_response\r\n  result[\"response\"]\r\n\
  end\r\n\
  \r\n\
  def buscar_categoria_de_proyecto_por_nombre(nombre)\r\n  result = WebserviceConsumer.get(URI.escape(\"/service/ws_categoria_de_proyecto/find.json?nombre=#{categorias}\")).parsed_response\r\n  result[\"response\"]\r\n\
  end\r\n"
controller_extension: ""
model_extension: ""
created_at: 2016-02-26 17:01:23.950427 Z
updated_at: 2017-02-04 00:38:18.961517 Z
label: ""
hint: ""
project: 
organization: 
process: 
ext_template_id: 
  http://certificacion.store.sinpapeles.com/: "831"
  http://qa.store.sinpapeles.com/: 825
  http://prod-aig.store.panamatramita.gob.pa/: 728
  https://demo-aig.store.panamaenlinea.gob.pa/: 3579
  http://store.test.sinpapeles.pragmagenia.net/: "103761"
  https://test-aig.store.panamaenlinea.gob.pa/: 2119
namespace: ""
custom: 
serial: 2848-8300-0920-9377-8986
